name: bundle Guide
# By https://github.com/fredg1

on:
  workflow_dispatch:
  # see https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestbranchestags for more info about this if you want to modify it
  # (for example, if you wish to make it so that any branch can trigger this workflow)
  push:
    branches:
      - 'master'
    paths:
      - 'Source/relay/**.ash'
      - 'Source/relay/**.js'

env:
  # To have the target branch name use DYNAMIC_TARGET_NAME, set USE_DYNAMIC_TARGET_NAME to 'true'. Will otherwise use STATIC_TARGET_NAME.
  USE_DYNAMIC_TARGET_NAME: true
  STATIC_TARGET_NAME: Pre-Release
  # in DYNAMIC_TARGET_NAME, {0} will be replaced by the current branch/tag's actual name
  DYNAMIC_TARGET_NAME: 'Bundled-{0}'

jobs:
  Set_target_branch:
    runs-on: windows-latest
    outputs:
      target_name: ${{ fromJSON( steps.set-name.outputs.target ).( env.USE_DYNAMIC_TARGET_NAME ) }}
    steps:
      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1
        
      - id: set-name
        run: echo "::set-output name=target::{false:${{env.STATIC_TARGET_NAME}},true:${{format(env.DYNAMIC_TARGET_NAME,env.BRANCH_NAME)}}}"
        
  build:
    needs: Set_target_branch
    runs-on: windows-latest
    env:
      TARGET_BRANCH_NAME: ${{needs.Set_target_branch.outputs.target_name}}

    steps:
      - name: setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          
      - name: checkout current branch
        uses: actions/checkout@v2
        
      - name: checkout target branch
        uses: actions/checkout@v2
        with:
          ref: ${{env.TARGET_BRANCH_NAME}}
          path: target_branch
          persist-credentials: false
          fetch-depth: 0
        
      - name: more info
        run: |
          echo $GITHUB_WORKSPACE
        
      - name: Forward output
        shell: python
        run: |
          import os
          import sys
          # Get out of the '.github' folder (apparently not even needed since execution seems to start on the root folder, but, eh, just in case...)
          while '.github' in os.getcwd(): os.chdir('..')
          
          sys.path.append(os.getcwd())
          import Bundle_ASH_script
          
          # The script that bundles the target script. First argument is the target script. Second argument is the path to reach the file to create/put the result in. Third argument (optional) is the path to reach the "mafia folder".
          Bundle_ASH_script.bundle_and_write('relay/relay_TourGuide.ash', 'target_branch/relay_TourGuide.ash', 'Source')
          
          print(os.listdir())
