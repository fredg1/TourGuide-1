name: bundle Guide
# By https://github.com/fredg1

on:
  workflow_dispatch:
  # see https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestbranchestags for more info about this if you want to modify it
  # (for example, if you wish to make it so that any branch can trigger this workflow)
  push:
    branches:
      - 'master'
    paths:
      - 'Source/relay/**.ash'
      - 'Source/relay/**.js'

env:
  # To have the branch name depend on the ref's name instead, set USE_STATIC_TARGET_NAME to 'true', and (if you want) modify the end of line 36
  TARGET_BRANCH_NAME: Pre-Release
  USE_DYNAMIC_TARGET_NAME: true

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1
      
      # //////////////////////////
      # /  Change this to modify /
      # /  the name of the       /
      # /  target branch         /
      # //////////////////////////
      
      - name: set dynamic target branch name
        # "${{env.TARGET_BRANCH_NAME}}" is the name of the original branch
        run: echo "TARGET_BRANCH_NAME=Bundled-${{env.TARGET_BRANCH_NAME}}" >> $GITHUB_ENV
        if: ${{env.USE_DYNAMIC_TARGET_NAME}}
      
      
      - name: setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          
      - name: checkout current branch
        uses: actions/checkout@v2
        
      - name: checkout target branch
        uses: actions/checkout@v2
        with:
          ref: ${{env.TARGET_BRANCH_NAME}}
          path: target_branch
          persist-credentials: false
          fetch-depth: 0
        
      - name: more info
        run: |
          echo $GITHUB_WORKSPACE
        
      - name: Forward output
        shell: python
        run: |
          import os
          import sys
          # Get out of the '.github' folder (apparently not even needed since execution seems to start on the root folder, but, eh, just in case...)
          while '.github' in os.getcwd(): os.chdir('..')
          
          sys.path.append(os.getcwd())
          import Bundle_ASH_script
          
          # The script that bundles the target script. First argument is the target script. Second argument is the path to reach the file to create/put the result in. Third argument (optional) is the path to reach the "mafia folder".
          Bundle_ASH_script.bundle_and_write('relay/relay_TourGuide.ash', 'target_branch/relay_TourGuide.ash', 'Source')
          
          print(os.listdir())
